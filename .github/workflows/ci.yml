name: Bookstore API CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'  # Runs every night at 3:00 AM UTC

jobs:
  # ---------------- SMOKE TEST JOB ----------------
  smoke:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    name: Smoke Tests (Dockerized)

    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx for modern Docker build support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build Docker image for tests
      - name: Build Docker image
        run: docker build -t bookstore-api-tests .

      # Run the container (test execution)
      - name: Run Smoke Tests in Docker container
        id: run-tests
        run: |
          docker run --name bookstore-api-tests-smoke bookstore-api-tests mvn test -Dgroups="smoke" -Dallure.results.directory=target/allure-results || true

      # Copy Allure results from Docker container to host machine
      - name: Copy Allure Results from Docker container
        run: |
          docker cp bookstore-api-tests-smoke:/project/target/allure-results ./allure-results-smoke || true

      # Remove test container to clean up
      - name: Remove test container
        run: |
          docker rm bookstore-api-tests-smoke || true

      # Install Allure CLI tool
      - name: Install Allure Commandline
        uses: allure-framework/allure-commandline@v2.13.8
        with:
          version: '2.21.0'

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate allure-results-smoke --clean -o allure-report-smoke

      # Upload Allure results (raw data)
      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-smoke
          path: allure-results-smoke

      # Upload Allure report (HTML files)
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-smoke
          path: allure-report-smoke

  # ------------- REGRESSION TEST JOB (NIGHTLY) -------------
  regression:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    name: Nightly Regression Tests (Dockerized)

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t bookstore-api-tests .

      - name: Run Regression Tests in Docker container
        id: run-tests
        run: |
          docker run --name bookstore-api-tests-reg bookstore-api-tests mvn test -Dgroups="regression" -Dallure.results.directory=target/allure-results || true

      - name: Copy Allure Results from Docker container
        run: |
          docker cp bookstore-api-tests-reg:/project/target/allure-results ./allure-results-regression || true

      - name: Remove test container
        run: |
          docker rm bookstore-api-tests-reg || true

      # Install Allure CLI tool
      - name: Install Allure Commandline
        uses: allure-framework/allure-commandline@v2
        with:
          version: '2.21.0'

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate allure-results-regression --clean -o allure-report-regression

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-regression
          path: allure-results-regression

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-regression
          path: allure-report-regression
